@import '_colors.scss';

$themes: (
  light: (
    primary-color: $dark-blue,
    accent-color: $black,
    primary-text-color: $dark-blue,
    secondary-text-color: $black,
    general-background: $pale-grey,
    positive-background: $green,
    warning-background: $red,
    button-background: rgba(51, 51, 51, 0.05),
    interactive-background: linear-gradient(-45deg, $light-yellow, $light-red, $light-blue, $light-purple)
  ),
  dark: (
    primary-color: $green,
    accent-color: $pale-grey,
    primary-text-color: $blue-green,
    secondary-text-color: $pale-grey,
    general-background: $dark-blue,
    positive-background: $light-green,
    warning-background: $light-red,
    button-background: rgba(51, 51, 51, 0.05),
    interactive-background: linear-gradient(-45deg, $yellow, $red, $purple, $blue-purple)
  )
);

@mixin themed() {
    @each $theme, $map in $themes {
      .theme--#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
        @content;
        $theme-map: null !global;
      }
    }
  }
  
  @function themedStyle($key) {
    @return map-get($theme-map, $key);
  }